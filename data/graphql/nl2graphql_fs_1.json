[
    {
        "query": "Fetch allPosts with the title and body fields",
        "gold": "{   allPosts {     nodes {       title       body     }   } }",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts with title and body",
        "gold": "{   allPosts {     nodes {       title       body     }   } }",
        "hardness": "medium"
    },
    {
        "query": "Update the username to Zack for the user with id equal to 3",
        "gold": "mutation {  updateUserById(input : { id: 3, userPatch: { username: \"Zack\"}}) {    user {      id,      username    }  }}",
        "hardness": "hard"
    },
    {
        "query": "Fetch allPosts only with the body field",
        "gold": "{   allPosts { nodes {  body   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts with body",
        "gold": "{   allPosts { nodes {  body   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts only with the title field",
        "gold": "{   allPosts { nodes {  title   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts with title",
        "gold": "{   allPosts { nodes {  title   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts only with the createdDate field",
        "gold": "{   allPosts { nodes {  createdDate   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts with the created date",
        "gold": "{   allPosts { nodes {  createdDate   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts only with authorId field",
        "gold": "{   allPosts { nodes {  authorId   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts with the author id",
        "gold": "{   allPosts { nodes {  authorId   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts with the title, body and authorId fields",
        "gold": "{   allPosts { nodes {  title body authorId   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts with title, body and author id",
        "gold": "{   allPosts { nodes {  title body authorId   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts where the author id is 1. Include the title and body fields",
        "gold": "{   allPosts(condition : { authorId: 1}) { nodes {  title body   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts where the author id is 1 and get the title and body",
        "gold": "{   allPosts(condition : { authorId: 1}) { nodes {  title body   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts where the title is 'First post example'. Include the body field",
        "gold": "{   allPosts(condition : { title: \"First post example\"}) { nodes {  body   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts where the title is First post example and get the body field",
        "gold": "{   allPosts(condition : { title: \"First post example\"}) { nodes {  body   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts where the body is 'Lorem ipsum dolor sit amet'. Include the title field",
        "gold": "{   allPosts(condition : { body: \"Lorem ipsum dolor sit amet\"}) { nodes {  title   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts where the body is Lorem ipsum dolor sit amet and get the title field",
        "gold": "{   allPosts(condition : { body: \"Lorem ipsum dolor sit amet\"}) { nodes {  title   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch the last post with the title and body field",
        "gold": "{   allPosts(last : 1) { nodes {  title body   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch the first post with the title and body field",
        "gold": "{   allPosts(first : 1) { nodes {  title body   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch the first two post with the title and body field",
        "gold": "{   allPosts(first : 2) { nodes {  title body   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch the last three post with the title and body field",
        "gold": "{   allPosts(last : 3) { nodes {  title body   } }}",
        "hardness": "medium"
    },
    {
        "query": "Fetch allPosts and orderBy CREATED_DATE_ASC. Include the title, body and authorId",
        "gold": "{   allPosts(orderBy: CREATED_DATE_ASC) { nodes {  title body authorId   } }}",
        "hardness": "easy"
    },
    {
        "query": "Fetch all posts and order by in ascending on their created date and get their title, body and author id",
        "gold": "{   allPosts(orderBy: CREATED_DATE_ASC) { nodes {  title body authorId   } }}",
        "hardness": "hard"
    },
    {
        "query": "Fetch the posts where the author id is 1 and get all the fields in the response",
        "gold": "{   allPosts(condition: {authorId: 2}) { nodes {  id title body authorId createdDate   } }}",
        "hardness": "hard"
    },
    {
        "query": "Fetch all posts with the fields of id, title, body and using author id fetch their username",
        "gold": "query {  allPosts {    nodes {      id      title      body      userByAuthorId {        username      }    }  }}",
        "hardness": "hard"
    },
    {
        "query": "Create a user with the username 'Bob' and return the username field",
        "gold": "mutation {  createUser(input: {user: {username: \"Bob\"}}) {    user {      username    }  }}",
        "hardness": "hard"
    },
    {
        "query": "Delete a post by id where the id is 1 and return the post title",
        "gold": "mutation {  deletePostById(input : { id: 1}) {    post {      title    }  }}",
        "hardness": "hard"
    },
    {
        "query": "Update the username to Zack for the user with id equal to 3",
        "gold": "mutation {  updateUserById(input : { id: 3, userPatch: { username: \"Zack\"}}) {    user {      id,      username    }  }}",
        "hardness": "hard"
    },
    {
        "query": "Get the user with the fields id, username and created date where the username is Benjie",
        "gold": "{   allUsers(condition : { username: \"Benjie\"}) { nodes {  id username createdDate   } }}",
        "hardness": "hard"
    }
]